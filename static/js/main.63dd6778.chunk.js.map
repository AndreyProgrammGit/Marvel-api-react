{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error-gojo.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/ErrorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","href","MarvelService","constructor","_this","_apiBase","_apiKey","_baseOffset","getResource","async","res","fetch","url","ok","Error","concat","status","json","getAllCharacters","offset","arguments","length","undefined","data","results","map","_transformCharacter","getCharacter","this","id","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","alt","RandomChar","Component","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","updateChar","Math","floor","random","then","catch","onError","componentDidMount","render","errorMessage","spinner","content","View","onClick","mjolnir","_ref","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","renderItems","arr","i","tabIndex","props","onCharSelected","onKeyPress","e","key","disabled","porpTypes","PropTypes","func","isRequired","Skeleton","_Fragment","CharInfo","charId","componentDidUpdate","prevProps","skeleton","ErrorBoundary","componentDidCatch","err","errorinfo","console","log","App","selectedChar","decoration","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63dd6778.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","\r\n\r\nclass MarvelService { \r\n\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=6d3f1baf6be3005775af71b7ace6fe5d'\r\n    _baseOffset = 210;\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if(!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._apiBase) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls.url, \r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error-gojo.6f959416.gif\";","import img from './error-gojo.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display:'block' }} src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {Component} from 'react'\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true, \n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    onCharLoaded = (char) => {\n        this.setState(\n            {\n                char,\n                loading: false\n            }\n        );\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        // this.onCharLoaded();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    onError = () => {\n        this.setState({loading: false, error:true});\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? <View char = {char}/> : null;\n        \n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import {Component} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport PropTypes from \"prop-types\";\n\nimport './charList.scss';\n\n\n\nclass CharList extends Component{\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n    \n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if(newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={this.setRef}\n                    key={item.id}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id);\n                        this.focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            this.props.onCharSelected(item.id);\n                            this.focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n        \n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    disabled={newItemLoading}\n                    style={{ 'display': charEnded ? 'none' : 'block' }}\n                    onClick={() => {this.onRequest(offset)}}\n                    className=\"button button__main button__long\">\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.porpTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Skeleton from \"../skeleton/Skeleton\"\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport MarvelService from '../../services/MarvelService';\nimport { Component } from 'react';\n\nimport PropTypes, { number } from \"prop-types\";\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false, \n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if(!charId) {\n            return;\n        }\n\n        // this.onCharLoading;\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState(\n            {\n                char,\n                loading: false\n            }\n        );\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({loading: false, error:true});\n    }\n\n    render() {\n        const {char, loading, error} = this.state\n\n        const skeleton = char || loading || error ? null : <Skeleton/>;\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner /> : null;\n\n        const content = !(loading || error || !char) ? <View char = {char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return(\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">Homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        if (i > 9) return;\n                        return(\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(err, errorinfo) {\r\n        console.log(err, errorinfo)\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if  (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\"\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../ErrorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>   \n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}